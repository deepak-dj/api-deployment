name: Deploy FastAPI App to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx for multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Build Docker image
      - name: Build Docker image
        run: |
          docker build -t my-fastapi-app:latest .

      # Step 4: Save Docker image to file
      - name: Save Docker image as a tarball
        run: |
          docker save -o my-fastapi-app.tar my-fastapi-app:latest
        # Store the tarball as an artifact (optional)
        # uses: actions/upload-artifact@v2
        # with:
        #   name: my-fastapi-app
        #   path: my-fastapi-app.tar

      # Step 5: Deploy to EC2 instance
      - name: Deploy to EC2
        env:
          HOST: ${{ secrets.EC2_HOST }}
          USERNAME: ${{ secrets.EC2_USERNAME }}
          SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          # Copy Docker image tarball to the EC2 instance
          scp -o StrictHostKeyChecking=no -i "$SSH_KEY" my-fastapi-app.tar $USERNAME@$HOST:/home/$USERNAME/

          # SSH into the EC2 instance and deploy the application
          ssh -o StrictHostKeyChecking=no -i "$SSH_KEY" $USERNAME@$HOST << 'EOF'
            # Load the Docker image
            docker load -i /home/$USERNAME/my-fastapi-app.tar

            # Stop any running container with the same name
            docker stop fastapi-container || true
            docker rm fastapi-container || true

            # Run a new container
            docker run -d --name fastapi-container -p 80:8000 my-fastapi-app:latest
          EOF
